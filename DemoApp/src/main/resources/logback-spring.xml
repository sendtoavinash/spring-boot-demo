<?xml version="1.0" encoding="UTF-8"?>
<configuration>
	<include
		resource="org/springframework/boot/logging/logback/base.xml" />
	<springProfile name="dev">
		<property name="LOGS" value="/opt/logs" />
		<!-- <property name="LOGS" value="./logs" /> -->

		<appender name="Console"
			class="ch.qos.logback.core.ConsoleAppender">
			<layout class="ch.qos.logback.classic.PatternLayout">
				<Pattern>
					%black(%d{ISO8601}) %highlight(%-5level) [%blue(%t)]
					%yellow(%C{1.}): %msg%n%throwable
				</Pattern>
			</layout>
		</appender>

		<appender name="RollingFile"
			class="ch.qos.logback.core.rolling.RollingFileAppender">
			<file>${LOGS}/DemoApp-logger.log</file>
			<encoder
				class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
				<Pattern>%d %p %C{1.} [%t] %m%n</Pattern>
			</encoder>

			<rollingPolicy
				class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
				<!-- rollover daily and when the file reaches 10 MegaBytes -->
				<fileNamePattern>${LOGS}/archived/DemoApp-logger-%d{yyyy-MM-dd}.%i.log
				</fileNamePattern>
				<timeBasedFileNamingAndTriggeringPolicy
					class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
					<maxFileSize>500MB</maxFileSize>
				</timeBasedFileNamingAndTriggeringPolicy>
			</rollingPolicy>
		</appender>

		<!-- LOG everything at INFO level -->
		<root level="info">
			<appender-ref ref="RollingFile" />
			<appender-ref ref="Console" />
		</root>
	</springProfile>
	<springProfile name="stg">
		<property name="LOGS" value="/opt/logs" />
		<!-- <property name="LOGS" value="./logs" /> -->

		<appender name="Console"
			class="ch.qos.logback.core.ConsoleAppender">
			<layout class="ch.qos.logback.classic.PatternLayout">
				<Pattern>
					%black(%d{ISO8601}) %highlight(%-5level) [%blue(%t)]
					%yellow(%C{1.}): %msg%n%throwable
				</Pattern>
			</layout>
		</appender>

		<appender name="RollingFile"
			class="ch.qos.logback.core.rolling.RollingFileAppender">
			<file>${LOGS}/DemoApp-logger-stg.log</file>
			<encoder
				class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
				<Pattern>%d %p %C{1.} [%t] %m%n</Pattern>
			</encoder>

			<rollingPolicy
				class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
				<!-- rollover daily and when the file reaches 10 MegaBytes -->
				<fileNamePattern>${LOGS}/archived/DemoApp-logger-stg-%d{yyyy-MM-dd}.%i.log
				</fileNamePattern>
				<timeBasedFileNamingAndTriggeringPolicy
					class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
					<maxFileSize>500MB</maxFileSize>
				</timeBasedFileNamingAndTriggeringPolicy>
			</rollingPolicy>
		</appender>

		<!-- LOG everything at INFO level -->
		<root level="info">
			<appender-ref ref="RollingFile" />
			<appender-ref ref="Console" />
		</root>
	</springProfile>
	<springProfile name="prod">
		<property name="LOGS" value="/opt/logs" />
		<!-- <property name="LOGS" value="./logs" /> -->

		<appender name="Console"
			class="ch.qos.logback.core.ConsoleAppender">
			<layout class="ch.qos.logback.classic.PatternLayout">
				<Pattern>
					%black(%d{ISO8601}) %highlight(%-5level) [%blue(%t)]
					%yellow(%C{1.}): %msg%n%throwable
				</Pattern>
			</layout>
		</appender>

		<appender name="RollingFile"
			class="ch.qos.logback.core.rolling.RollingFileAppender">
			<file>${LOGS}/DemoApp-logger-prod.log</file>
			<encoder
				class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
				<Pattern>%d %p %C{1.} [%t] %m%n</Pattern>
			</encoder>

			<rollingPolicy
				class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
				<!-- rollover daily and when the file reaches 10 MegaBytes -->
				<fileNamePattern>${LOGS}/archived/DemoApp-logger-prod-%d{yyyy-MM-dd}.%i.log
				</fileNamePattern>
				<timeBasedFileNamingAndTriggeringPolicy
					class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
					<maxFileSize>500MB</maxFileSize>
				</timeBasedFileNamingAndTriggeringPolicy>
			</rollingPolicy>
		</appender>

		<!-- LOG everything at INFO level -->
		<root level="info">
			<appender-ref ref="RollingFile" />
			<appender-ref ref="Console" />
		</root>
	</springProfile>
</configuration>